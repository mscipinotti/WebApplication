@using Microsoft.AspNetCore.Mvc.Localization
@using WebAPP.Infrastructure.GlobalParameters
@using WebApp.Infrastructure.Models.dto
@using WebAPP.Infrastructure.Models.enums
@using System.Globalization
@using WebAPP.Infrastructure.Utilities;
@inject IViewLocalizer localizer
@inject IConfiguration Config
@model BiographyDto

<article class="w-100">
    <input type="hidden" asp-for="@Model.Id" />
    <input type="hidden" asp-for="@Model.Author.Name" />
    <input type="hidden" asp-for="@Model.Author.Surname" />
    <div class="d-flex flex-row">
        <div class="p-2 d-flex flex-column">
            <img src="~/Images/leaves.jpg" alt="Immagine dell'autore" />
            <div read>
                <input type="hidden" asp-for="@Model.Author.Id" />
                <input type="hidden" asp-for="@Model.Author.FC" />
                <div><b>@localizer["BirthDay"]</b><br /><input asp-for="@Model.Author.BirthDay" class="border-0" readonly /></div>
                <div><b>Email</b><br /><input asp-for="@Model.Author.Email" class="border-0" readonly /></div>
                <div><b>@localizer["WorkPlace"]</b><br /><input asp-for="@Model.Author.WorkPlace" class="border-0" readonly /></div>
                <div><b>@localizer["WorkAddress"]</b><br /><input asp-for="@Model.Author.WorkAddress" class="border-0" readonly /></div>
                <div><b>@localizer["Nationality"]</b><br /><input asp-for="@Model.Author.Nationality" class="border-0" readonly /></div>
            </div>
        </div>
        <div class="d-flex flex-column w-100">
            <div class="p-2">
                <h3>
                    <input type="hidden" asp-for="@Model.Author.Id" />
                    @if (Model.Author.Title is not null)
                    {
                        <input type="hidden" asp-for="@Model.Author.Title!.Id" />
                        <input type="hidden" asp-for="@Model.Author.Title!.Description" />
                        @Model.Author.Title!.Description
                    }
                    &nbsp;@Model.Author.Name
                    &nbsp;@Model.Author.Surname
                </h3>
            </div>
            <div class="p-2">
                @* .AspNetCore.Culture è il nome di default assegnato al cookie del locale scelto *@
                <p id="pText"><textarea class="border-0 w-100" asp-for="@Model.Text" readonly value="@Model.Text" spellcheck="false"></textarea></p>
                @if(Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse"><button id="btnText" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button></div>
                    <div class="d-flex flex-row-reverse"><button id="btnTextSave" asp-controller="Operator" asp-action="UpdateBiography" hidden type="submit" class="btn btn-link text-decoration-none">@localizer["Save"]</button></div>
                }
            </div>
            <div class="p-2"><h4>@localizer["Responsibility"]</h4></div>
            <div class="p-2">
                <div class="row w-100 text-center">
                    <div class="col-md-2"><b>@localizer["From"]</b></div>
                    <div class="col-md-2"><b>@localizer["To"]</b></div>
                    <div class="col-md-8"><b>@localizer["Description"]</b></div>
                </div>
                <ol id="oResponsibility" class="nav list-group list-group-numbered">
                    @{
                        int index = 0;
                        foreach (var r in Model.Responsibilities)
                        {
                            <li class="row w-100 py-1">
                                @if (r.From is not null)
                                {
                                    <input type="hidden" asp-for="@Model.Responsibilities[index].Biography" value="@Model.Id" />
                                    <input type="hidden" asp-for="@Model.Responsibilities[index].Id" value="@r.Id" />
                                    <div class="col-md-2">
                                        <input asp-for="@Model.Responsibilities[index].From" class="px-2 slimInputText datepicker" readonly value="@r.From" />
                                    </div>
                                    <div class="col-md-2">
                                        <input asp-for="@Model.Responsibilities[index].To" class="px-2 slimInputText datepicker" readonly value="@r.To" />
                                    </div>
                                    <div class="col-md-8">
                                        <input asp-for="@Model.Responsibilities[index].Description" class="px-2 border-0 w-100" readonly value="@r.Description" />
                                    </div>
                                }
                            </li>
                            index++;
                        }
                    }
                </ol>
                @if (Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse"><button id="btnResponsibility" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button></div>
                    <div class="d-flex flex-row-reverse"><button id="btnResponsibilitySave" type="submit" asp-controller="Operator" asp-action="UpdateBiography" hidden class="btn btn-link text-decoration-none">@localizer["Save"]</button></div>
                }
            </div>
            <div class="p-2"><h4>@localizer["Works"]</h4></div>
            <div class="p-2">
                <div class="row w-100 text-center">
                    <div class="col-md-6"><b>@localizer["Title"]</b></div>
                    <div class="col-md-2"><b>ISBN</b></div>
                    <div class="col-md-2"><b>@localizer["ArchivedSince"]</b></div>
                    <div class="col-md-2"><b>@localizer["PublishDate"]</b></div>
                </div>
                <ol id="oWorks" class="nav list-group list-group-numbered">
                    @{
                        index = 0;
                        foreach (var t in Model.Texts)
                        {
                            <li class="row w-100 py-1">
                                <input type="hidden" asp-for="@Model.Texts[index].Id" value="@t.Id" />
                                <input type="hidden" asp-for="@Model.Texts[index].Archive" value="@t.Archive" />
                                <div class="col-md-6">
                                    <a class="px-2 text-decoration-none" href="~/StaticFiles/@(t.Id).pdf" target="_blank">@(t.Title)</a>
                                    <input type="text" asp-for="@Model.Texts[index].Title" class="px-2 w-100 border-0" hidden value="@t.Title" />
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].ISBN" class="px-2 slimInputText" readonly value="@(t.ISBN ?? string.Empty)" />
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].Present" class="px-2 slimInputText datepicker" readonly value="@t.Present" />
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].Published" class="px-2 slimInputText datepicker" readonly value="@t.Published" />
                                </div>
                            </li>
                            index++;
                        }
                    }
                </ol>
                @if (Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse"><button id="btnWorks" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button></div>
                    <div class="d-flex flex-row-reverse"><button id="btnWorksSave" type="submit" asp-controller="Operator" asp-action="UpdateBiography" hidden class="btn btn-link text-decoration-none">@localizer["Save"]</button></div>
                }
            </div>
        </div>
    </div>
    <p class="warningMessage">@(Model.Errors == null ? string.Empty : Model.Errors[0])</p>
</article>

<script type="text/javascript">
    $(function () {
        waitingDialog.show();
        
        $('.datepicker').datepicker($.datepicker.regional["@Model.Language.ToString(true)"]);

        $("#btnText").on('click', function () {
            $("#pText > textarea").removeAttr('readonly').toggleClass('selected').focus();
            $("#btnText").hide('slow');
            $("#btnTextSave").removeAttr('hidden', 'slow');
        });

        $("#btnResponsibility").on('click', function () {
            $('#oResponsibility li input:visible').toggleClass('selected');
            $('#oResponsibility li input:visible:first').focus();
            $("#btnResponsibility").hide('slow');
            $("#btnResponsibilitySave").removeAttr('hidden', 'slow');
        });

        $("#btnWorks").on('click', function () {
            $('#oWorks li input:not(visible)').removeAttr('hidden', 'slow');
            $('#oWorks li a:visible').hide('slow');
            $('#oWorks li input:visible:first').focus();
            $('#oWorks li input').toggleClass('selected');
            $("#btnWorks").hide('slow');
            $("#btnWorksSave").removeAttr('hidden', 'slow');
        });

        setTimeout(function () { waitingDialog.hide(); }, 2000);
    });

    $('.datepicker').on("click", function () {
        let butt = $(this).closest('ol').closest('div').find('button[type="submit"]');
        $('#ui-datepicker-div').css('visibility', butt.prop('hidden') ? 'hidden' : 'visible');
    });

    // function updateBiography() {
    //     // Tutta la biografia è caricata anche quelle parti non modificate dall'utente
    //     let updateBiographyReturn = true;
    //     let titleDto = {
    //         Id: "@(Model.Author.Title is null ? string.Empty : Model.Author.Title!.Id)",
    //         Description: "@(Model.Author.Title is null ? string.Empty : Model.Author.Title!.Description)"
    //     };
    //     let authorDto = {
    //         Id: "@Model.Author.Id",
    //         Name: "@Model.Author.Name",
    //         Surname: "@Model.Author.Surname",
    //         Title: titleDto,
    //         Email: "@Model.Author.Email",
    //         WorkPlace: "@Model.Author.WorkPlace",
    //         WorkAddress: "@Model.Author.WorkAddress",
    //         BirthDay: "@Model.Author.BirthDay",
    //         FC: "@Model.Author.FC",
    //         Nationality: "@Model.Author.Nationality"
    //     };
    //     let authors = [];
    //     let responsibilityDto = [];
    //     let textDto = [];
    //     let language = Boolean("@(Model.Language == Languages.English)" == "False" ? false : true);

    //     authors.push(authorDto);

    //     $('#oResponsibility li').each(function () {
    //         let responsibility = {
    //             Author: "@Model.Author.Id",
    //             Id: $(this).find("input[type='hidden']").val(),
    //             From: $(this).find("p:first input").length ? $(this).find("p:first input").val() : "@Model.Text",
    //             To: $(this).find('p:nth-child(4) input').length ? $(this).find('p:nth-child(4) input').val() : "@Model.Text",
    //             Description: (language && $(this).find('p:last input').length) ? $(this).find('p:last input').val() : '',
    //             DescriptionIt: (!language && $(this).find('p:last input').length) ? $(this).find('p:last input').val() : ''
    //         }
    //         responsibilityDto.push(responsibility);
    //     });

    //     $('#oWorks li').each(function (e) {
    //         let text = {
    //             Id: $(this).find("input[type='hidden']").val(),
    //             Title: $(this).find('a').text(),
    //             ISBN: $(this).find('p:first').text(),
    //             Archive: 1,                                                 // da sistemare
    //             Present: $(this).find('p:nth-child(5)').text(),
    //             Published: $(this).find('p:last').text(),
    //             Authors: authors                                            // Eventuali altri autori sono volutamente non caricati
    //         }
    //         textDto.push(text);
    //     });

    //     let biographyDto = new token("@Model.Login", "@Model.Password", "@Model.Profile", "@Model.RequestVerificationToken", "@Model.Cookie", "@Model.JwtToken"); 
    //     biographyDto.Id = "@Model.Id";
    //     biographyDto.Author = authorDto;
    //     biographyDto.Responsibilities = responsibilityDto;
    //     biographyDto.Texts = textDto;
    //     biographyDto.Text = (language && $("#tText").length) ? $("#tText").val() : "@Model.Text";

    //     $.ajax({
    //         url: "UpdateBiography",
    //         type: 'post',
    //         async: false,
    //         data: biographyDto
    //     }).fail(function (jqXHR) {
    //         let biographyDto = $.parseJSON(jqXHR.responseText);
    //         let message = "";
    //         jQuery.each(biographyDto.errors, function (i, val) {
    //             i = parseInt(i + 1);
    //             message = message + i + ". " + val + "<br>";
    //         });
    //         $(".warningMessage").html(message);
    //         updateBiographyReturn = false;
    //     })

    //     return updateBiographyReturn;
    // }
</script>