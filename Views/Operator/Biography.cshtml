@using Microsoft.AspNetCore.Mvc.Localization
@using WebApp.Infrastructure.Models.dto
@using WebAPP.Infrastructure.Models.enums
@using System.Globalization
@using WebAPP.Infrastructure.Utilities;
@inject IViewLocalizer localizer
@inject IConfiguration Config
@model BiographyDto

<article class="w-100">
    <input type="hidden" asp-for="@Model.Id" />
    <input type="hidden" asp-for="@Model.Author.Name" />
    <input type="hidden" asp-for="@Model.Author.Surname" />
    <div class="d-flex flex-row">
        <div class="p-2 d-flex flex-column">
            <img src="~/Images/leaves.jpg" alt="Immagine dell'autore" />
            <div read>
                <input type="hidden" asp-for="@Model.Author.Id" />
                <input type="hidden" asp-for="@Model.Author.FC" />
                <div><b>@localizer["BirthDay"]</b><br /><input asp-for="@Model.Author.BirthDay" class="border-0" readonly /></div>
                <div><b>Email</b><br /><input type="email" asp-for="@Model.Author.Email" class="border-0" readonly /></div>
                <div><b>@localizer["WorkPlace"]</b><br /><textarea asp-for="@Model.Author.WorkPlace" class="border-0" readonly></textarea></div>
                <div><b>@localizer["WorkAddress"]</b><br /><textarea asp-for="@Model.Author.WorkAddress" class="border-0" readonly></textarea></div>
                <div><b>@localizer["Nationality"]</b><br /><input asp-for="@Model.Author.Nationality" class="border-0" readonly /></div>
            </div>
        </div>
        <div class="d-flex flex-column w-100">
            <div class="p-2">
                <h3>
                    <input type="hidden" asp-for="@Model.Author.Id" />
                    @if (Model.Author.Title is not null)
                    {
                        <input type="hidden" asp-for="@Model.Author.Title!.Id" />
                        <input type="hidden" asp-for="@Model.Author.Title!.Description" />
                        @Model.Author.Title!.Description
                    }
                    &nbsp;@Model.Author.Name
                    &nbsp;@Model.Author.Surname
                </h3>
            </div>
            <div class="p-2">
                @* .AspNetCore.Culture è il nome di default assegnato al cookie del locale scelto *@
                <p id="pText"><textarea class="border-0 w-100" asp-for="@Model.Text" readonly value="@Model.Text" spellcheck="false"></textarea></p>
                @if(Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse"><button id="btnText" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button></div>
                    <div class="d-flex flex-row-reverse"><button id="btnTextSave" asp-controller="Operator" asp-action="UpdateBiography" hidden type="submit" class="btn btn-link text-decoration-none" data-toggle="modal" data-target="#modalRequest">@localizer["Save"]</button></div>
                }
            </div>
            <div class="p-2"><h4>@localizer["Responsibility"]</h4></div>
            <div class="p-2">
                <div class="row w-100 text-center">
                    <div class="col-md-2"><b>@localizer["From"]</b></div>
                    <div class="col-md-2"><b>@localizer["To"]</b></div>
                    <div class="col-md-8"><b>@localizer["Description"]</b></div>
                </div>
                <ol id="oResponsibility" class="nav list-group list-group-numbered">
                    @{
                        int index = 0;
                        foreach (var r in Model.Responsibilities)
                        {
                            <li class="row w-100 py-1">
                                @if (r.From is not null)
                                    {
                                        <input type="hidden" asp-for="@Model.Responsibilities[index].ToDelete" value="@r.ToDelete" />
                                        <input type="hidden" asp-for="@Model.Responsibilities[index].Id" value="@r.Id" />
                                        <div class="col-md-2">
                                            <input asp-for="@Model.Responsibilities[index].From" class="px-2 slimInputText datepicker" style="cursor:grab" required readonly value="@r.From" />
                                            <span class="invalid-feedback" name="feedback.Responsibilities[@index].From"></span>
                                        </div>
                                        <div class="col-md-2">
                                            <input asp-for="@Model.Responsibilities[index].To" class="px-2 slimInputText datepicker" style="cursor:grab" readonly value="@r.To" />
                                        </div>
                                        <div class="col-md-8">
                                            <textarea class="border-0 w-100" asp-for="@Model.Responsibilities[index].Description" required readonly value="@r.Description" spellcheck="false"></textarea>
                                            <span class="invalid-feedback" name="feedback.Responsibilities[@index].Description"></span>
                                        </div>
                                    }
                            </li>
                            index++;
                        }
                    }
                </ol>
                @if (Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse">
                        <button id="btnResponsibilityModify" name="btnResponsibilityModify" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button>
                        <button id="btnResponsibilityAdd" name="btnResponsibilityAdd" type="button" class="btn btn-link text-decoration-none">@localizer["Add"]</button>
                        <button id="btnResponsibilityDelete" name="btnResponsibilityDelete" type="submit" asp-controller="Operator" asp-action="DeleteResponsibility" hidden class="btn btn-link text-decoration-none">@localizer["Delete"]</button>
                        <button id="btnResponsibilitySave" name="btnResponsibilitySave" type="submit" asp-controller="Operator" asp-action="UpdateBiography" hidden class="btn btn-link text-decoration-none">@localizer["Save"]</button>
                    </div>
                }
            </div>
            <div class="p-2"><h4>@localizer["Works"]</h4></div>
            <div class="p-2">
                <div class="row w-100 text-center">
                    <div class="col-md-6"><b>@localizer["Title"]</b></div>
                    <div class="col-md-2"><b>ISBN</b></div>
                    <div class="col-md-2"><b>@localizer["ArchivedSince"]</b></div>
                    <div class="col-md-2"><b>@localizer["PublishDate"]</b></div>
                </div>
                <ol id="oWork" class="nav list-group list-group-numbered">
                    @{
                        index = 0;
                        foreach (var t in Model.Texts)
                        {
                            <li class="row w-100 py-1">
                                <input type="hidden" asp-for="@Model.Texts[index].Id" value="@t.Id" />
                                <input type="hidden" asp-for="@Model.Texts[index].Archive" value="@t.Archive" />
                                <div class="col-md-6">
                                    <input type="text" asp-for="@Model.Texts[index].ToDelete" hidden />
                                    <input type="text" asp-for="@Model.Texts[index].Title" hidden class="px-2 w-100 border-0" />
                                    <a class="px-2 text-decoration-none" href="~/StaticFiles/@(t.Id).pdf" target="_blank">@t.Title</a>
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].ISBN" class="px-2 slimInputText" style="cursor:grab" readonly value="@(t.ISBN ?? string.Empty)" />
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].Present" class="px-2 slimInputText datepicker" style="cursor:grab" readonly value="@t.Present" />
                                </div>
                                <div class="col-md-2">
                                    <input asp-for="@Model.Texts[index].Published" class="px-2 slimInputText datepicker" style="cursor:grab" readonly value="@t.Published" />
                                </div>
                            </li>
                            index++;
                        }
                    }
                </ol>
                @if (Model.Profile != ProfileItems.User)
                {
                    <div class="d-flex flex-row-reverse">
                        <button id="btnWorkModify" name="btnWorkModify" type="button" class="btn btn-link text-decoration-none">@localizer["Modify"]</button>
                        <button id="btnWorkAdd" name="btnWorkAdd" type="button" class="btn btn-link text-decoration-none">@localizer["Add"]</button>
                        <button id="btnWorkDelete" name="btnWorkDelete" type="submit" asp-controller="Operator" asp-action="DeleteWork" hidden class="btn btn-link text-decoration-none">@localizer["Delete"]</button>
                        <button id="btnWorkSave" name="btnWorkSave" type="submit" asp-controller="Operator" asp-action="UpdateBiography" hidden class="btn btn-link text-decoration-none">@localizer["Save"]</button>
                    </div>
                }
            </div>
        </div>
    </div>
</article>

<script type="text/javascript">
    $(function () {
        let modal = waitingDialog.show('waitModal');

        $("#btnResponsibilityAdd").on('click', function () {
            let index = @Model.Responsibilities.Count();
            let row = '<li class="row w-100 py-1">' +
                        '<div class="col-md-2">' +
                            '<input class="px-2 slimInputText datepicker selected" required readonly type="text" id="Responsibilities_' + index + '__From" name="Responsibilities[' + index + '].From" />' +
                            '<span class="invalid-feedback" name="feedback.Responsibilities[' + index + '].From"></span>' +
                        '</div>' +
                        '<div class="col-md-2">' +
                            '<input class="px-2 slimInputText datepicker selected" readonly type="text" id="Responsibilities_' + index + '__To" name="Responsibilities[' + index + '].To" />' +
                        '</div>' +
                        '<div class="col-md-8">' +
                            '<textarea class="border-0 w-100 selected" required spellcheck = "false" id = "Responsibilities_' + index + '__Description" name = "Responsibilities[' + index + '].Description"></textarea>' +
                            '<span class="invalid-feedback" name="feedback.Responsibilities[' + index + '].Description"></span>' +
                        '</div>' +
                     '</li>';

            $('#oResponsibility').hide();
            $('#oResponsibility').append(row);
            $('#oResponsibility').fadeIn('slow');
            $("#btnResponsibilityAdd").hide('slow');
            $("#btnResponsibilityModify").hide('slow');
            $("#btnResponsibilitySave").removeAttr('hidden', 'slow');

            setDatepicker('oResponsibility');
        });
        $("#btnWorkAdd").on('click', function () {
            let index = @Model.Texts.Count();
            let row = '<li class="row w-100 py-1">' +
                        '<div class="col-md-6">' +
                            '<input type="text" class="px-2 w-100 border-0 selected" id="Texts_' + index + '__Title" name = "Texts[' + index + '].Title" />' +
                            '<span class="invalid-feedback" name="feedback.Texts[' + index + '].Title"></span>' +
                        '</div>' +
                        '<div class="col-md-2">' +
                            '<input class="px-2 slimInputText selected" type="text" id="Texts_' + index + '__ISBN" name="Texts[' + index + '].ISBN" />' +
                            '<span class="invalid-feedback" name="feedback.Texts[' + index + '].ISBN"></span>' +
                        '</div>' +
                        '<div class="col-md-2">' +
                            '<input class="px-2 slimInputText datepicker selected" readonly type="text" id = "Texts_' + index + '__Present" name = "Texts[' + index + '].Present" />' +
                            '<span class="invalid-feedback" name="feedback.Texts[' + index + '].Present"></span>' +
                        '</div>' +
                        '<div class="col-md-2">' +
                            '<input class="px-2 slimInputText datepicker selected" readonly type="text" id="Texts_' + index + '__Published" name = "Texts[' + index + '].Published" />' +
                            '<span class="invalid-feedback" name="feedback.Texts[' + index + '].Description"></span>' +
                        '</div>' +
                    '</li>';

            $('#oWork').hide();
            $('#oWork').append(row);
            $('#oWork').fadeIn('slow');
            $("#btnWorkAdd").hide('slow');
            $("#btnWorkModify").hide('slow');
            $("#btnWorkSave").removeAttr('hidden', 'slow');

            setDatepicker('oWork');
        });

        setTimeout(function () { waitingDialog.hide(modal); }, 2000);
        $('.datepicker').datepicker('destroy');
    });

    $("#btnText").on('click', function () {
        $("#pText > textarea").removeAttr('readonly').toggleClass('selected').focus();
        $("#btnText").hide('slow');
        $("#btnTextSave").removeAttr('hidden', 'slow');
    });

    $("#btnResponsibilityModify").on('click', function () {
        let $inputField = $('#oResponsibility li input');
        let $textareaField = $('#oResponsibility li textarea');
        let $divButt = $('#oResponsibility').closest('div');
        let $buttSave = $divButt.find('button[name$="Save"]');
        let $buttModify = $divButt.find('button[name$="Modify"]');
        let $buttAdd = $divButt.find('button[name$="Add"]');

        $inputField.toggleClass('selected', 'slow');
        $textareaField.toggleClass('selected', 'slow');
        $inputField.find(':visible:first').focus();
        $textareaField.removeAttr('readonly', 'slow');
        $buttModify.toggle('slow');
        $buttAdd.toggle('slow');
        $buttSave.removeAttr('hidden', 'slow');
        $buttSave.show('slow');

        if ($('#btnWorkSave').is(':hidden')) $allWorkDatepicker.datepicker('destroy');
        setDatepicker('oResponsibility');
    });

    $("#btnWorkModify").on('click', function () {
        let $field = $('#oWork li input');
        let $aField = $('#oWork li a');
        let $fieldHidden = $('#oWork li input[name$="Title"]');
        let $divButt = $('#oWork').closest('div');
        let $buttSave = $divButt.find('button[name$="Save"]');
        let $buttModify = $divButt.find('button[name$="Modify"]');
        let $buttAdd = $divButt.find('button[name$="Add"]');

        $aField.hide();
        $field.toggleClass('selected', 'slow');
        $fieldHidden.removeAttr('hidden', 'slow');
        $fieldHidden.first().focus();
        $buttModify.hide('slow');
        $buttAdd.hide('slow');
        $buttSave.removeAttr('hidden', 'slow');
        $buttSave.show('slow');

        if($('#btnResponsibilitySave').is(':hidden')) $allResponsibilityDatepicker.datepicker('destroy');
        setDatepicker('oWork');
    });

    $('.datepicker').on("click", function () {
        let $divButt = $(this).closest('ol').closest('div');
        let $buttDelete = $divButt.find('button[name$="Delete"]');
        let $buttDeleteHidden = $buttDelete.is(':hidden');
        let $buttSaveHidden = $divButt.closest('div').find('button[name$="Save"]').is(':hidden');
        let $parent = $(this).closest("li");

        if ($buttSaveHidden) {
            $parent.find("input").toggleClass('selected', 'slow');
            $parent.find("input:hidden[name$='ToDelete']").val(Boolean($buttDeleteHidden));
            $parent.find("textarea:visible").toggleClass('selected', 'slow');
            $parent.find("a:visible").toggleClass('selected', 'slow');
            $divButt.find('button').toggle('slow');
            $buttDelete.removeAttr('hidden', 'slow');
        }
    });

    setDatepicker = function(o)
    {
        $('#' + o).find('.datepicker').datepicker($.datepicker.regional["@Model.Language.ToString(true)"]);
        $('#' + o).find('.datepicker').datepicker('show');
    }
</script>