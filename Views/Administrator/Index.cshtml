@model WebAPP.Infrastructure.Models.AccountsDto

<input type="hidden" asp-for=Login value="@Model.Login" />
<input type="hidden" asp-for=Password value="@Model.Password" />
<input type="hidden" asp-for=Cookie value="@Model.Cookie" />
<input type="hidden" asp-for=RequestVerificationToken value="@Model.RequestVerificationToken" />
<input type="hidden" asp-for=JwtToken value="@Model.JwtToken" />

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div style="display: flex">
    <nav class="nav flex-column">
        <a id="Add" class="nav-link active" href="#" onclick="addRow();">Add</a>
        <a id="Modify" class="nav-link disabled" href="#" onclick="modifyRows();">Modify</a>
        <a id="Delete" class="nav-link" href="#modalRequest" data-toggle="modal" data-target="#modalRequest" onclick="return confirm();">Delete</a>
    </nav>
    <article>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Email</th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="max 24 chars">Name</div></th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="max 24 chars">Surname</div></th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="16 chars requested">Fiscal Code</div></th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="min 15 years">Age</div></th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="min 8 chars">Password</div></th>
                    <th scope="col"><div data-toggle="tooltip" data-placement="top" title="not before today">Expiration Date</div></th>
                    <th scope="col">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in Model.Accounts)
                {
                    <tr>
                        <th scope="row">@Model.Accounts.IndexOf(a)</th>
                        <td class="hugeInputText firstTd" style="cursor:grab">@a.Email</td>
                        <td class="inputText">@a.Name</td>
                        <td class="inputText">@a.Surname</td>
                        <td class="midInputText">@a.FC</td>
                        <td class="slimInputText">@a.Age</td>
                        <td class="inputText">******</td>
                        <td class="slimInputText">@a.ExpirationDate</td>
                        <td class="midInputText">
                            <div class="dropdown">
                                <a class="btn dropdown-toggle" type="button" role="button" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@a.Status</a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Inactive</a></li>
                                    <li><a class="dropdown-item" href="#">Active</a></li>
                                    <li><a class="dropdown-item" href="#">ChangePassword</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <p class="warningMessage"></p>
    </article>
</div>

<script type="text/javascript">
    $(function () {
        $("td:nth-child(2)").on('click', function () {
            $("table").hide();
            $(this).parent()
                   .toggleClass('rowSelected')
                   .find('td').each(function (index) {
                        if (index <= 0 || index >= 7) return;
                        let e = $(this).find("input");
                        let l = ["inputText", "inputText", "midInputText", "slimInputText", "inputText", "slimInputText"];
                        let p = ["Name", "Surname", "Fiscale Code", "Age", "Password", "Expiration Date"];
                        let t = ["text", "text", "text", "number", "password", "date"];
                        if (e.length == 0) {
                            let html = '<input type="' + t[index - 1] + '" class="'+ l[index - 1] + '" placeholder="' + p[index - 1] + '" value="' + $(this).text() + '" />';
                            $(this).html(html);
                        }
                        else {
                            $(this).html(e.val());
                            e.remove();
                        }
                   });
            $("table").show("slow");
        });

        // https://learn.jquery.com/events/event-delegation/
        // Event delegation. Problema: aggiungere il click event alla riga dinamicamente creata. Si usa
        // $("selector 1").on("click", "selector 2", function)
        // Il selector 1 deve esistere sempre (già prima della aggiunta dinamica). Il selector 2 deve essere figlio del primo e dinamicamente creato.
        $("tbody").on('click', 'tr.rowSelected .dropdown-menu .dropdown-item', function () {
            $(this).closest(".dropdown")
                   .find("a:first")
                   .text($(this).text());
        });

        $("table tbody").on('keypress', function (e) {
            if (e.which == 13) {
                return addAccount();
            }
        });

        let params = new URLSearchParams(document.location.search);
        @{
            string message = string.Empty;
            if (Model.Errors is not null) message = Model.Errors[0];
        }
        $(".warningMessage").html("@message" != "" ? "@message" : params.get("Error"));
    });

    function addRow() {
        $("table").hide();
        $('#Modify').prop('disabled', true);

        let index = Number($('table > tbody:last-child > tr:last-child > th').text()) + 1;
        let email = '<input type="email" class="hugeInputText" contenteditable="true" placeholder="name@example.com" />';
        let name = '<input type="text" class="inputText" placeholder="Nome" />';
        let surname = '<input type="text" class="inputText" placeholder="Cognome" />';
        let fiscalCode = '<input type="text" class="midInputText" placeholder="codice fiscale" />';
        let age = '<input type="text" class="slimInputText" placeholder="età" />';
        let password = '<input type="password" class="inputText" placeholder="password" />';
        let expirationDate = '<input type="date" class="slimInputText" value="expirationDate" />';
        let status = '<div class="dropdown">' +
                        '<a class="btn dropdown-toggle" type = "button" role = "button" href = "#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Inactive</a>' +
                        '<ul class="dropdown-menu">' +
                            '<li><a class="dropdown-item" href = "#">Inactive</a></li>' +
                            '<li><a class="dropdown-item" href = "#">Active</a></li>' +
                            '<li><a class="dropdown-item" href = "#">ChangePassword</a></li>' +
                        '</ul>' +
                    '</div>';
        $('table > tbody:last-child').append('<tr class="rowSelected">                                  \
                                                <th scope="row">' + index + '</th>                      \
                                                <td class="hugeInputText">' + email + '</td>            \
                                                <td class="inputText">' + name + '</td>                 \
                                                <td class="inputText">' + surname + '</td>              \
                                                <td class="midInputText">' + fiscalCode + '</td>        \
                                                <td class="slimInputText">' + age + '</td>              \
                                                <td class="inputText">' + password + '</td>             \
                                                <td class="slimInputText">' + expirationDate + '</td>   \
                                                <td class="midInputText">' + status + '</td>            \
                                              </tr>');
        $("table").fadeIn("slow");
        return true;
    }

    function addAccount() {
        let addAccountReturn = true;
        let row = 0;
        let text;
        let accountsDto = {
            Login: "@Model.Login",
            Password: "@Model.Password",
            RequestVerificationToken: "@Model.RequestVerificationToken",
            Cookie: "@Model.Cookie",
            JwtToken: "@Model.JwtToken",
            Accounts: []
        };

        $('table > tbody:last-child > tr.rowSelected').each(function (e) {
            waitingDialog.show();

            let accountDto = {
                Email: '',
                Name: '',
                Surnme: '',
                FC: '',
                Age: 0,
                Password: '',
                ExpirationDate: ''
            };
            $(this).find('td input').each(function (index) {
                switch (index) {
                    case 0: accountDto.Email = $(this).val();
                        break;
                    case 1: accountDto.Name = $(this).val();
                       break;
                    case 2: accountDto.Surname = $(this).val();
                       break;
                    case 3: accountDto.FC = $(this).val();
                        break;
                    case 4: accountDto.Age = $(this).val();
                        break;
                    case 5: accountDto.Password = $(this).val();
                       break;
                    case 6: accountDto.ExpirationDate = $(this).val();
                        break;
                }
            });
            text = $(this).find('td div > a').html();
            $.each($(this).find('td div > ul li a'), function (index, item) {
                if (item.innerHTML == text) accountDto.Status = index;
            });
            accountsDto.Accounts.push(accountDto);
            row = row + 1;
        });

        $.ajax({
            url: "AddAccounts",
            type: 'post',
            dataType: 'json',
            async: false,
            data: JSON.stringify(accountsDto),
            contentType: 'application/json; charset=utf-8'
        }).fail(function (jqXHR) {
            let accountsDto = $.parseJSON(jqXHR.responseText);
            let message = "";
            jQuery.each(accountsDto.errors, function (i, val) {
                i = parseInt(i + 1);
                message = message + i + ". " + val + "<br>";
            });
            $(".warningMessage").html(message);
            addAccountReturn = false;
        });

        setTimeout(function () { waitingDialog.hide(); }, 2000);
        // Obbligatorio chiamare la chiusura dello spinner modale con il setTimeout altrimenti rimane visibile
        
        return addAccountReturn;
    }

    function modifyRows() {
        $('#Add').prop('disabled', true);
    }
</script>